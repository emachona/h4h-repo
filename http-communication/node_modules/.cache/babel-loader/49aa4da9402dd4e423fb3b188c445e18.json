{"remainingRequest":"/home/user/Downloads/EDU/http-communication/node_modules/babel-loader/lib/index.js!/home/user/Downloads/EDU/http-communication/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/user/Downloads/EDU/http-communication/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Downloads/EDU/http-communication/src/components/HttpCommunication.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/Downloads/EDU/http-communication/src/components/HttpCommunication.vue","mtime":1640336966360},{"path":"/home/user/Downloads/EDU/http-communication/babel.config.js","mtime":1638882514430},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640088775134},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/babel-loader/lib/index.js","mtime":1640088775121},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640088775134},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/vue-loader/lib/index.js","mtime":1640088779699}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HttpCommunication.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h1>\n      Spring boot skeleton application without DB Connectivity\n    </h1>\n    <hr class=\"grayBorder\" style=\"margin-bottom: 40px;width:40%\">\n    <div class=\"flex spaceBetween\">\n     <div class=\"colum\">\n       <div class=\"flex\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"id\" placeholder=\"Id\">\n        <button \n          class=\"btn\"\n          @click=\"getUserById(id)\"\n        >\n          Get user by Id\n        </button>\n      </div>\n       <div class=\"flex\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"usernameOfUser\" placeholder=\"Username\">\n        <button \n          class=\"btn\"\n          @click=\"getUserByUsername(usernameOfUser)\"\n        >\n          Get user by username\n        </button>\n      </div>\n      <div class=\"flex\">\n        <h3 class=\"margin-right\">List of users</h3>\n        <button \n          class=\"btn\"\n          @click=\"getListOfUsers\"\n        >\n          Get list of users\n        </button>\n      </div>\n     </div>\n\n      <form @submit.prevent=\"addUser\" class=\"flex width200\">  \n        <input type=\"text\" class=\"margin-right size\" v-model=\"username\" placeholder=\"Username\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"email\" placeholder=\"Email\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"firstName\" placeholder=\"First name\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"lastName\" placeholder=\"Last name\">\n        <p>\n          <button type=\"submit\" class=\"btn\">Create user</button>\n        </p>\n      </form>\n    </div>\n    <table>\n      <tr>\n        <th>Id</th>\n        <th>UserName</th>\n        <th>Firs name</th>\n        <th>Last name</th>\n        <th>Email</th>\n        <th>Actions</th>\n      </tr>\n      <tr\n        v-for=\"(user, i) in users\"\n        :key=\"i\"\n      >\n        <td>{{user.id}}</td>\n        <td>{{ user.username }}</td>\n        <td>{{ user.firstName }}</td>\n        <td>{{ user.lastName }}</td>\n        <td>{{ user.email }}</td>\n        <td>\n          <button class=\"btn margin-right edit\" @click=\"editUsername(user.id)\">Edit username</button>\n          <button class=\"btn margin-right\" @click=\"editUser(user.id)\">Edit email</button>\n          <button class=\"btn\" @click=\"deleteUser(user.id)\">Delete</button>\n        </td>\n      </tr>\n    </table>\n    <!-- <form @submit.prevent=\"uploadFile\" class=\"column\">\n      <input type=\"file\" id=\"myFile\" name=\"filename\">\n      <input type=\"submit\">\n    </form> -->\n    <div  v-if=\"response && response.data\">\n      <h5 v-show=\"value\" style=\"text-decoration: underline;\">\n        Response from the backend application\n      </h5>\n      <h3 v-show=\"value\">\n        {{ response.data}}\n      </h3>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HttpCommunication',\n\n  data() {\n    return {\n      id: null,\n      value: true,\n      response: null,\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      usernameOfUser:\"\",\n      getAllUsersResponse:[],\n      users: [\n      //{\n      //username: \"User name\",\n      //firstName: \"Fist name\",\n      //lastName: \"Last name\",\n      //email: \"Email\"\n      //}\n      ]\n    };\n  },\n\n  methods: {\n    async getListOfUsers() {\n      //write the method you use on backend for getting all users\n      this.value=false;\n      this.response = await axios.get('http://localhost:8081/users')\n      if(this.response.status === 200){\n       this.getAllUsersResponse=this.response.data;\n       for(var i=0;i<this.getAllUsersResponse.length;i++){\n         this.users.push(this.getAllUsersResponse[i]);\n       }\n      }\n    },\n     async getUserByUsername(username){\n       this.value=true;\n      this.response=await axios.get('http://localhost:8081/users/get/username/'+username);\n    },\n    async getUserById(id){\n       this.value=true;\n      this.response=await axios.get('http://localhost:8081/users/'+id);\n    },\n    async addUser() {\n      this.value=true;\n      //write the method you use on backend for adding\n      this.response = await axios.post('http://localhost:8081/users', {\n        username: this.username,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email\n      });\n      if(this.response.status === 200){\n        this.users.push(this.response.data);\n      }\n    },\n    async editUsername(id){\n      this.value=true;\n      this.response = await axios.post('http://localhost:8081/users/username/change/'+id, {username:this.username});\n      if(this.response.status===200){\n        this.users[this.users.findIndex(u => u.id ==id)].username=this.response.data;\n      }\n    },\n    async editUser(id) {\n      this.value=true;\n      //write the method you use on backend for editing user\n      this.response = await axios.put('http://localhost:8081/users/change/'+id+'?email='+this.email);\n      if(this.response.status===200){\n        this.users[this.users.findIndex(u => u.id ==id)]=this.response.data;\n      }\n    },\n    async deleteUser(id) {\n      this.value=true;\n      //write the you use on backend for deleting\n      this.response = await axios.post('http://localhost:8081/users/delete/'+id,{});\n        if(this.response.status === 200){\n          this.users.splice(this.users.findIndex(u => u.id ==id), 1);\n      }\n    },\n\n\n\n    //this is a simple example how we can override headers\n    async getXMLResponse() {\n      this.response = await axios.post('', {}, {\n        headers: {\n          'Content-Type': 'application/xml'\n        }\n      })\n    },\n    //this is a simple example how we can send value as RequestParam\n    async getResponseWithRequestParam() {\n      this.response = await axios.get(`http://localhost:8081/greeting?name=${ this.name }`)\n    },\n    //this is a simple example how we can send value as PathVariable\n    async getResponseWithPathVariable() {\n      this.response = await axios.get(`http://localhost:8081/greeting/${ this.name }/hello`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.column {\n  display: flex;\n  flex-direction: column;\n}\n.grayBorder {\n  border: 1px solid gray;\n}\n.btn {\n  height: 30px;\n  margin-top: 6px;\n  background-color: white;\n  color: black;\n  border: 1px solid gray;\n}\n.flex {\n  display: flex;\n  align-items: center;\n}\n.margin-right {\n  margin-right: 5px;\n}\n.edit{\n  margin-right: 5px;\n}\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\ntd, th {\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 8px;\n}\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n.spaceBetween {\n  justify-content: space-between;\n}\n.size {\n  height: 30px;\n  width: 70px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}