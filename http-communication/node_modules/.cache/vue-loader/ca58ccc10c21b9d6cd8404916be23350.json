{"remainingRequest":"/home/user/Downloads/EDU/http-communication/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Downloads/EDU/http-communication/src/components/HttpCommunication.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/Downloads/EDU/http-communication/src/components/HttpCommunication.vue","mtime":1640337352595},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640088775134},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/babel-loader/lib/index.js","mtime":1640088775121},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/cache-loader/dist/cjs.js","mtime":1640088775134},{"path":"/home/user/Downloads/EDU/http-communication/node_modules/vue-loader/lib/index.js","mtime":1640088779699}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0h0dHBDb21tdW5pY2F0aW9uJywKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlkOiBudWxsLAogICAgICB2YWx1ZTogdHJ1ZSwKICAgICAgcmVzcG9uc2U6IG51bGwsCiAgICAgIHVzZXJuYW1lOiAiIiwKICAgICAgZmlyc3ROYW1lOiAiIiwKICAgICAgbGFzdE5hbWU6ICIiLAogICAgICBlbWFpbDogIiIsCiAgICAgIHVzZXJuYW1lT2ZVc2VyOiIiLAogICAgICBnZXRBbGxVc2Vyc1Jlc3BvbnNlOltdLAogICAgICB1c2VyczogWwogICAgICAvL3sKICAgICAgLy91c2VybmFtZTogIlVzZXIgbmFtZSIsCiAgICAgIC8vZmlyc3ROYW1lOiAiRmlzdCBuYW1lIiwKICAgICAgLy9sYXN0TmFtZTogIkxhc3QgbmFtZSIsCiAgICAgIC8vZW1haWw6ICJFbWFpbCIKICAgICAgLy99CiAgICAgIF0KICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0TGlzdE9mVXNlcnMoKSB7CiAgICAgIC8vd3JpdGUgdGhlIG1ldGhvZCB5b3UgdXNlIG9uIGJhY2tlbmQgZm9yIGdldHRpbmcgYWxsIHVzZXJzCiAgICAgIHRoaXMudmFsdWU9ZmFsc2U7CiAgICAgIHRoaXMucmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MS91c2VycycpCiAgICAgIGlmKHRoaXMucmVzcG9uc2Uuc3RhdHVzID09PSAyMDApewogICAgICAgdGhpcy5nZXRBbGxVc2Vyc1Jlc3BvbnNlPXRoaXMucmVzcG9uc2UuZGF0YTsKICAgICAgIGZvcih2YXIgaT0wO2k8dGhpcy5nZXRBbGxVc2Vyc1Jlc3BvbnNlLmxlbmd0aDtpKyspewogICAgICAgICB0aGlzLnVzZXJzLnB1c2godGhpcy5nZXRBbGxVc2Vyc1Jlc3BvbnNlW2ldKTsKICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICBhc3luYyBnZXRVc2VyQnlVc2VybmFtZSh1c2VybmFtZSl7CiAgICAgICB0aGlzLnZhbHVlPXRydWU7CiAgICAgIHRoaXMucmVzcG9uc2U9YXdhaXQgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODEvdXNlcnMvZ2V0L3VzZXJuYW1lLycrdXNlcm5hbWUpOwogICAgfSwKICAgIGFzeW5jIGdldFVzZXJCeUlkKGlkKXsKICAgICAgIHRoaXMudmFsdWU9dHJ1ZTsKICAgICAgdGhpcy5yZXNwb25zZT1hd2FpdCBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MS91c2Vycy8nK2lkKTsKICAgIH0sCiAgICBhc3luYyBhZGRVc2VyKCkgewogICAgICB0aGlzLnZhbHVlPXRydWU7CiAgICAgIC8vd3JpdGUgdGhlIG1ldGhvZCB5b3UgdXNlIG9uIGJhY2tlbmQgZm9yIGFkZGluZwogICAgICB0aGlzLnJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgxL3VzZXJzJywgewogICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lLAogICAgICAgIGZpcnN0TmFtZTogdGhpcy5maXJzdE5hbWUsCiAgICAgICAgbGFzdE5hbWU6IHRoaXMubGFzdE5hbWUsCiAgICAgICAgZW1haWw6IHRoaXMuZW1haWwKICAgICAgfSk7CiAgICAgIGlmKHRoaXMucmVzcG9uc2Uuc3RhdHVzID09PSAyMDApewogICAgICAgIHRoaXMudXNlcnMucHVzaCh0aGlzLnJlc3BvbnNlLmRhdGEpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZWRpdFVzZXJuYW1lKGlkKXsKICAgICAgdGhpcy52YWx1ZT10cnVlOwogICAgICB0aGlzLnJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgxL3VzZXJzL3VzZXJuYW1lL2NoYW5nZS8nK2lkKyc/dXNlcm5hbWU9Jyt0aGlzLnVzZXJuYW1lLHt9KTsKICAgICAgaWYodGhpcy5yZXNwb25zZS5zdGF0dXM9PT0yMDApewogICAgICAgIHRoaXMudXNlcnNbdGhpcy51c2Vycy5maW5kSW5kZXgodSA9PiB1LmlkID09aWQpXT10aGlzLnJlc3BvbnNlLmRhdGE7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBlZGl0VXNlcihpZCkgewogICAgICB0aGlzLnZhbHVlPXRydWU7CiAgICAgIC8vd3JpdGUgdGhlIG1ldGhvZCB5b3UgdXNlIG9uIGJhY2tlbmQgZm9yIGVkaXRpbmcgdXNlcgogICAgICB0aGlzLnJlc3BvbnNlID0gYXdhaXQgYXhpb3MucHV0KCdodHRwOi8vbG9jYWxob3N0OjgwODEvdXNlcnMvY2hhbmdlLycraWQrJz9lbWFpbD0nK3RoaXMuZW1haWwpOwogICAgICBpZih0aGlzLnJlc3BvbnNlLnN0YXR1cz09PTIwMCl7CiAgICAgICAgdGhpcy51c2Vyc1t0aGlzLnVzZXJzLmZpbmRJbmRleCh1ID0+IHUuaWQgPT1pZCldPXRoaXMucmVzcG9uc2UuZGF0YTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGRlbGV0ZVVzZXIoaWQpIHsKICAgICAgdGhpcy52YWx1ZT10cnVlOwogICAgICAvL3dyaXRlIHRoZSB5b3UgdXNlIG9uIGJhY2tlbmQgZm9yIGRlbGV0aW5nCiAgICAgIHRoaXMucmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjgwODEvdXNlcnMvZGVsZXRlLycraWQse30pOwogICAgICAgIGlmKHRoaXMucmVzcG9uc2Uuc3RhdHVzID09PSAyMDApewogICAgICAgICAgdGhpcy51c2Vycy5zcGxpY2UodGhpcy51c2Vycy5maW5kSW5kZXgodSA9PiB1LmlkID09aWQpLCAxKTsKICAgICAgfQogICAgfSwKCgoKICAgIC8vdGhpcyBpcyBhIHNpbXBsZSBleGFtcGxlIGhvdyB3ZSBjYW4gb3ZlcnJpZGUgaGVhZGVycwogICAgYXN5bmMgZ2V0WE1MUmVzcG9uc2UoKSB7CiAgICAgIHRoaXMucmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCcnLCB7fSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veG1sJwogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICAvL3RoaXMgaXMgYSBzaW1wbGUgZXhhbXBsZSBob3cgd2UgY2FuIHNlbmQgdmFsdWUgYXMgUmVxdWVzdFBhcmFtCiAgICBhc3luYyBnZXRSZXNwb25zZVdpdGhSZXF1ZXN0UGFyYW0oKSB7CiAgICAgIHRoaXMucmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MS9ncmVldGluZz9uYW1lPSR7IHRoaXMubmFtZSB9YCkKICAgIH0sCiAgICAvL3RoaXMgaXMgYSBzaW1wbGUgZXhhbXBsZSBob3cgd2UgY2FuIHNlbmQgdmFsdWUgYXMgUGF0aFZhcmlhYmxlCiAgICBhc3luYyBnZXRSZXNwb25zZVdpdGhQYXRoVmFyaWFibGUoKSB7CiAgICAgIHRoaXMucmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MS9ncmVldGluZy8keyB0aGlzLm5hbWUgfS9oZWxsb2ApCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["HttpCommunication.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HttpCommunication.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>\n      Spring boot skeleton application without DB Connectivity\n    </h1>\n    <hr class=\"grayBorder\" style=\"margin-bottom: 40px;width:40%\">\n    <div class=\"flex spaceBetween\">\n     <div class=\"colum\">\n       <div class=\"flex\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"id\" placeholder=\"Id\">\n        <button \n          class=\"btn\"\n          @click=\"getUserById(id)\"\n        >\n          Get user by Id\n        </button>\n      </div>\n       <div class=\"flex\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"usernameOfUser\" placeholder=\"Username\">\n        <button \n          class=\"btn\"\n          @click=\"getUserByUsername(usernameOfUser)\"\n        >\n          Get user by username\n        </button>\n      </div>\n      <div class=\"flex\">\n        <h3 class=\"margin-right\">List of users</h3>\n        <button \n          class=\"btn\"\n          @click=\"getListOfUsers\"\n        >\n          Get list of users\n        </button>\n      </div>\n     </div>\n\n      <form @submit.prevent=\"addUser\" class=\"flex width200\">  \n        <input type=\"text\" class=\"margin-right size\" v-model=\"username\" placeholder=\"Username\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"email\" placeholder=\"Email\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"firstName\" placeholder=\"First name\">\n        <input type=\"text\" class=\"margin-right size\" v-model=\"lastName\" placeholder=\"Last name\">\n        <p>\n          <button type=\"submit\" class=\"btn\">Create user</button>\n        </p>\n      </form>\n    </div>\n    <table>\n      <tr>\n        <th>Id</th>\n        <th>UserName</th>\n        <th>Firs name</th>\n        <th>Last name</th>\n        <th>Email</th>\n        <th>Actions</th>\n      </tr>\n      <tr\n        v-for=\"(user, i) in users\"\n        :key=\"i\"\n      >\n        <td>{{user.id}}</td>\n        <td>{{ user.username }}</td>\n        <td>{{ user.firstName }}</td>\n        <td>{{ user.lastName }}</td>\n        <td>{{ user.email }}</td>\n        <td>\n          <button class=\"btn margin-right edit\" @click=\"editUsername(user.id)\">Edit username</button>\n          <button class=\"btn margin-right\" @click=\"editUser(user.id)\">Edit email</button>\n          <button class=\"btn\" @click=\"deleteUser(user.id)\">Delete</button>\n        </td>\n      </tr>\n    </table>\n    <!-- <form @submit.prevent=\"uploadFile\" class=\"column\">\n      <input type=\"file\" id=\"myFile\" name=\"filename\">\n      <input type=\"submit\">\n    </form> -->\n    <div  v-if=\"response && response.data\">\n      <h5 v-show=\"value\" style=\"text-decoration: underline;\">\n        Response from the backend application\n      </h5>\n      <h3 v-show=\"value\">\n        {{ response.data}}\n      </h3>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'HttpCommunication',\n\n  data() {\n    return {\n      id: null,\n      value: true,\n      response: null,\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      usernameOfUser:\"\",\n      getAllUsersResponse:[],\n      users: [\n      //{\n      //username: \"User name\",\n      //firstName: \"Fist name\",\n      //lastName: \"Last name\",\n      //email: \"Email\"\n      //}\n      ]\n    };\n  },\n\n  methods: {\n    async getListOfUsers() {\n      //write the method you use on backend for getting all users\n      this.value=false;\n      this.response = await axios.get('http://localhost:8081/users')\n      if(this.response.status === 200){\n       this.getAllUsersResponse=this.response.data;\n       for(var i=0;i<this.getAllUsersResponse.length;i++){\n         this.users.push(this.getAllUsersResponse[i]);\n       }\n      }\n    },\n     async getUserByUsername(username){\n       this.value=true;\n      this.response=await axios.get('http://localhost:8081/users/get/username/'+username);\n    },\n    async getUserById(id){\n       this.value=true;\n      this.response=await axios.get('http://localhost:8081/users/'+id);\n    },\n    async addUser() {\n      this.value=true;\n      //write the method you use on backend for adding\n      this.response = await axios.post('http://localhost:8081/users', {\n        username: this.username,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email\n      });\n      if(this.response.status === 200){\n        this.users.push(this.response.data);\n      }\n    },\n    async editUsername(id){\n      this.value=true;\n      this.response = await axios.post('http://localhost:8081/users/username/change/'+id+'?username='+this.username,{});\n      if(this.response.status===200){\n        this.users[this.users.findIndex(u => u.id ==id)]=this.response.data;\n      }\n    },\n    async editUser(id) {\n      this.value=true;\n      //write the method you use on backend for editing user\n      this.response = await axios.put('http://localhost:8081/users/change/'+id+'?email='+this.email);\n      if(this.response.status===200){\n        this.users[this.users.findIndex(u => u.id ==id)]=this.response.data;\n      }\n    },\n    async deleteUser(id) {\n      this.value=true;\n      //write the you use on backend for deleting\n      this.response = await axios.post('http://localhost:8081/users/delete/'+id,{});\n        if(this.response.status === 200){\n          this.users.splice(this.users.findIndex(u => u.id ==id), 1);\n      }\n    },\n\n\n\n    //this is a simple example how we can override headers\n    async getXMLResponse() {\n      this.response = await axios.post('', {}, {\n        headers: {\n          'Content-Type': 'application/xml'\n        }\n      })\n    },\n    //this is a simple example how we can send value as RequestParam\n    async getResponseWithRequestParam() {\n      this.response = await axios.get(`http://localhost:8081/greeting?name=${ this.name }`)\n    },\n    //this is a simple example how we can send value as PathVariable\n    async getResponseWithPathVariable() {\n      this.response = await axios.get(`http://localhost:8081/greeting/${ this.name }/hello`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.column {\n  display: flex;\n  flex-direction: column;\n}\n.grayBorder {\n  border: 1px solid gray;\n}\n.btn {\n  height: 30px;\n  margin-top: 6px;\n  background-color: white;\n  color: black;\n  border: 1px solid gray;\n}\n.flex {\n  display: flex;\n  align-items: center;\n}\n.margin-right {\n  margin-right: 5px;\n}\n.edit{\n  margin-right: 5px;\n}\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\ntd, th {\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 8px;\n}\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n.spaceBetween {\n  justify-content: space-between;\n}\n.size {\n  height: 30px;\n  width: 70px;\n}\n</style>\n"]}]}